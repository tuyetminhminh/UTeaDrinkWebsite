# ==============================================
#  SPRING BOOT APP CONFIGURATION
# ==============================================
spring.application.name=utea
server.port=8080

# ==============================================
#  DATABASE (SQL Server)
# ==============================================
# ⚠️ SECURITY: Use environment variables instead of hardcoded values
spring.datasource.url=${DB_URL:jdbc:sqlserver://localhost\\MSSQLSERVER01;databaseName=UTEDrink2;encrypt=true;trustServerCertificate=true;sendStringParametersAsUnicode=true;characterEncoding=UTF-8}
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:123456}
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# ==============================================
#  JPA / Hibernate
# ==============================================
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.SQLServerDialect
spring.jpa.open-in-view=false
# UTF-8 Support for SQL Server
spring.jpa.properties.hibernate.connection.characterEncoding=UTF-8
spring.jpa.properties.hibernate.connection.CharSet=UTF-8
spring.jpa.properties.hibernate.connection.useUnicode=true

# ==============================================
#  THYMELEAF
# ==============================================
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8

# ==============================================
#  ENCODING
# ==============================================
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true

# ==============================================
#   MAIL (use app password; do not commit real secret)
# ⚠️ For local dev only. Production should use env vars without defaults.
# ==============================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
app.mail.from=${MAIL_FROM:UTeaDrink <phamthienhoang21@gmail.com>}

# ==============================================
#   CLOUDINARY CONFIG
# ⚠️ For local dev only. Production should use env vars without defaults.
# ==============================================
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}
cloudinary.folder=utea

# ==============================================
#   UPLOAD
# ==============================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ==============================================
#   OAUTH2
# ⚠️ For local dev only. Production should use env vars without defaults.
# ==============================================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
# ==============================================
#   JWT
# ==============================================
security.jwt.secret-key=${JWT_SECRET_KEY}
security.jwt.expiration-time=604800000
app.jwt.cookie-name=UTEA_TOKEN
app.jwt.cookie-secure=false
app.jwt.cookie-samesite=Lax
# ==============================================
#   GEMINI AI CONFIGURATION
# ⚠️ For local dev only. Production should use env vars without defaults.
# ==============================================
gemini.api.key=${GEMINI_API_KEY}

# ✅ KHUYẾN NGHỊ: Dùng model và version mới nhất
gemini.api.url=https://generativelanguage.googleapis.com/v1/models/gemini-2.5-flash:generateContent

# HOẶC, nếu bắt buộc phải dùng gemini-pro (để thử):
# gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent 

# Backup options (thử nếu trên không work):
# ĐÃ BỊ SAI CẤU HÌNH TRƯỚC ĐÓ. HÃY XOÁ BỎ HOẶC SỬA LẠI
# gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent
# gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent

# ==============================================
#   PAYOS CONFIGURATION (MBBank Payment)
# ==============================================
payos.client-id=${PAYOS_CLIENT_ID}
payos.api-key=${PAYOS_API_KEY}
payos.checksum-key=${PAYOS_CHECKSUM_KEY}
payos.api-url=${PAYOS_API_URL}
